# Generated by Django 5.2.6 on 2025-10-07 03:04

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id_usuario', models.BigAutoField(db_column='id_usuario', primary_key=True, serialize=False)),
                ('correo', models.CharField(db_column='correo', max_length=50)),
                ('nombre_usuario', models.CharField(db_column='nombre_usuario', max_length=10)),
                ('contrasena', models.CharField(db_column='contrasena', max_length=128)),
            ],
            options={
                'db_table': '"USUARIO"',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Autor',
            fields=[
                ('id_autor', models.BigAutoField(db_column='id_autor', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='nombre', max_length=50)),
            ],
            options={
                'db_table': '"AUTOR"',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CalificacionProducto',
            fields=[
                ('id_calificacion', models.BigAutoField(db_column='id_calificacion', primary_key=True, serialize=False)),
                ('calificacion', models.IntegerField(db_column='calificacion', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('fecha', models.DateTimeField(auto_now_add=True, db_column='fecha')),
            ],
            options={
                'db_table': '"CALIFICACION_PRODUCTO"',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id_categoria', models.BigAutoField(db_column='id_categoria', primary_key=True, serialize=False)),
                ('fecha', models.DateTimeField(auto_now_add=True, db_column='fecha')),
                ('nombre', models.CharField(db_column='nombre', max_length=50)),
                ('descripcion', models.TextField(blank=True, db_column='descripcion', null=True)),
            ],
            options={
                'db_table': '"CATEGORIA"',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ComentarioProducto',
            fields=[
                ('id_comentario_producto', models.BigAutoField(db_column='id_comentario_producto', primary_key=True, serialize=False)),
                ('descripcion', models.TextField(db_column='descripcion')),
                ('fecha', models.DateTimeField(auto_now_add=True, db_column='fecha')),
            ],
            options={
                'db_table': '"COMENTARIO_PRODUCTO"',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CompraProducto',
            fields=[
                ('id_compra_producto', models.BigAutoField(db_column='id_compra_producto', primary_key=True, serialize=False)),
                ('fecha', models.DateTimeField(auto_now_add=True, db_column='fecha')),
            ],
            options={
                'db_table': '"COMPRA_PRODUCTO"',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id_producto', models.BigAutoField(db_column='id_producto', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='nombre', max_length=50)),
                ('fecha', models.DateTimeField(auto_now_add=True, db_column='fecha')),
                ('archivo', models.BinaryField(db_column='archivo')),
                ('activo', models.BooleanField(db_column='activo', default=True)),
            ],
            options={
                'db_table': '"PRODUCTO"',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ImagenProducto',
            fields=[
                ('id_imagen_producto', models.BigAutoField(db_column='id_imagen_producto', primary_key=True, serialize=False)),
                ('orden', models.IntegerField(db_column='orden')),
                ('archivo', models.BinaryField(db_column='archivo')),
            ],
            options={
                'db_table': '"IMAGEN_PRODUCTO"',
                'ordering': ['orden'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Administrador',
            fields=[
                ('usuario', models.OneToOneField(db_column='id_usuario', on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='administrador', serialize=False, to='core.usuario')),
                ('acceso', models.BooleanField(db_column='acceso', default=True)),
            ],
            options={
                'db_table': '"ADMINISTRADOR"',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('usuario', models.OneToOneField(db_column='id_usuario', on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='cliente', serialize=False, to='core.usuario')),
                ('excliente', models.BooleanField(db_column='excliente', default=False)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, db_column='fecha_creacion')),
                ('saldo', models.DecimalField(db_column='saldo', decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'db_table': '"CLIENTE"',
                'managed': True,
            },
        ),
        migrations.AddIndex(
            model_name='usuario',
            index=models.Index(fields=['correo'], name='ix_usuario_correo'),
        ),
        migrations.AddIndex(
            model_name='usuario',
            index=models.Index(fields=['nombre_usuario'], name='ix_usuario_nombre'),
        ),
        migrations.AddConstraint(
            model_name='usuario',
            constraint=models.UniqueConstraint(fields=('nombre_usuario', 'correo'), name='UQ_CONSTRAIN'),
        ),
        migrations.AddConstraint(
            model_name='autor',
            constraint=models.UniqueConstraint(fields=('nombre',), name='UQ_AUTOR_NOMBRE'),
        ),
        migrations.AddIndex(
            model_name='categoria',
            index=models.Index(fields=['nombre'], name='ix_categoria_nombre'),
        ),
        migrations.CreateModel(
            name='DetallesProducto',
            fields=[
                ('producto', models.OneToOneField(db_column='id_producto', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='detalles', serialize=False, to='core.producto')),
                ('precio', models.DecimalField(db_column='precio', decimal_places=2, max_digits=12)),
                ('version', models.CharField(blank=True, db_column='version', max_length=50, null=True)),
                ('descripcion', models.TextField(blank=True, db_column='descripcion', null=True)),
            ],
            options={
                'db_table': '"DETALLES_PRODUCTO"',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='producto',
            name='autor',
            field=models.ForeignKey(blank=True, db_column='id_autor', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='productos', to='core.autor'),
        ),
        migrations.AddField(
            model_name='producto',
            name='categoria',
            field=models.ForeignKey(blank=True, db_column='id_categoria', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='productos', to='core.categoria'),
        ),
        migrations.AddField(
            model_name='compraproducto',
            name='producto',
            field=models.ForeignKey(db_column='id_producto', on_delete=django.db.models.deletion.PROTECT, related_name='compras', to='core.producto'),
        ),
        migrations.AddField(
            model_name='comentarioproducto',
            name='producto',
            field=models.ForeignKey(db_column='id_producto', on_delete=django.db.models.deletion.PROTECT, related_name='comentarios', to='core.producto'),
        ),
        migrations.AddField(
            model_name='calificacionproducto',
            name='producto',
            field=models.ForeignKey(db_column='id_producto', on_delete=django.db.models.deletion.PROTECT, related_name='calificaciones', to='core.producto'),
        ),
        migrations.AddField(
            model_name='imagenproducto',
            name='producto',
            field=models.ForeignKey(db_column='id_producto', on_delete=django.db.models.deletion.CASCADE, related_name='imagenes', to='core.producto'),
        ),
        migrations.AddField(
            model_name='compraproducto',
            name='usuario',
            field=models.ForeignKey(db_column='id_usuario', on_delete=django.db.models.deletion.PROTECT, related_name='compras', to='core.cliente'),
        ),
        migrations.AddField(
            model_name='comentarioproducto',
            name='usuario',
            field=models.ForeignKey(db_column='id_usuario', on_delete=django.db.models.deletion.PROTECT, related_name='comentarios', to='core.cliente'),
        ),
        migrations.AddIndex(
            model_name='cliente',
            index=models.Index(fields=['saldo'], name='ix_cliente_saldo'),
        ),
        migrations.AddConstraint(
            model_name='cliente',
            constraint=models.CheckConstraint(condition=models.Q(('saldo__gte', 0)), name='CHECK_SALDO'),
        ),
        migrations.AddField(
            model_name='calificacionproducto',
            name='usuario',
            field=models.ForeignKey(db_column='id_usuario', on_delete=django.db.models.deletion.PROTECT, related_name='calificaciones', to='core.cliente'),
        ),
        migrations.AddIndex(
            model_name='detallesproducto',
            index=models.Index(fields=['precio'], name='ix_det_precio'),
        ),
        migrations.AddConstraint(
            model_name='detallesproducto',
            constraint=models.CheckConstraint(condition=models.Q(('precio__gte', 0)), name='CHECK_PRECIO'),
        ),
        migrations.AddIndex(
            model_name='producto',
            index=models.Index(fields=['nombre'], name='ix_producto_nombre'),
        ),
        migrations.AddIndex(
            model_name='producto',
            index=models.Index(fields=['activo'], name='ix_producto_activo'),
        ),
        migrations.AddIndex(
            model_name='imagenproducto',
            index=models.Index(fields=['producto', 'orden'], name='ix_img_prod_orden'),
        ),
        migrations.AddIndex(
            model_name='compraproducto',
            index=models.Index(fields=['usuario'], name='ix_compra_usuario'),
        ),
        migrations.AddIndex(
            model_name='compraproducto',
            index=models.Index(fields=['fecha'], name='ix_compra_fecha'),
        ),
        migrations.AddConstraint(
            model_name='compraproducto',
            constraint=models.UniqueConstraint(fields=('producto', 'usuario'), name='UQ_COMPRA_USUARIO_PRODUCTO'),
        ),
        migrations.AddIndex(
            model_name='comentarioproducto',
            index=models.Index(fields=['producto'], name='ix_comentario_producto'),
        ),
        migrations.AddIndex(
            model_name='comentarioproducto',
            index=models.Index(fields=['usuario'], name='ix_comentario_usuario'),
        ),
        migrations.AddIndex(
            model_name='comentarioproducto',
            index=models.Index(fields=['fecha'], name='ix_comentario_fecha'),
        ),
        migrations.AddIndex(
            model_name='calificacionproducto',
            index=models.Index(fields=['usuario'], name='ix_calif_usuario'),
        ),
        migrations.AddConstraint(
            model_name='calificacionproducto',
            constraint=models.CheckConstraint(condition=models.Q(('calificacion__gte', 1), ('calificacion__lte', 5)), name='CHECK_CALIFICACION'),
        ),
        migrations.AddConstraint(
            model_name='calificacionproducto',
            constraint=models.UniqueConstraint(fields=('usuario', 'producto'), name='UQ_CALIFICACION_USUARIO_PRODUCTO'),
        ),
    ]
